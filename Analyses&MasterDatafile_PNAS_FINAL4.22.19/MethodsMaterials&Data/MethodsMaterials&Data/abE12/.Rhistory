abE12$cond[abE12$xB7 > 0] <- "xB7"
abE12$cond[abE12$xAB7 > 0] <- "xAB7"
#Create column "condLabel"
abE12 <- mutate(abE12, condLabel = cond)
cond <- as.factor(abE12$condLabel)
abE12$condLabel <- plyr::revalue(as.factor(abE12$condLabel), c("xA1"="Drug.A", "xB1"="Drug.B", "xAB1"="Drug.AB", "xA2"="DrugTeach.A", "xB2"="DrugTeach.B", "xAB2"="DrugTeach.AB",
"xA3"="Funds.More", "xB3"="Funds.Highlight", "xAB3"="Funds.MH", "xA4"="Teacher.Bonus", "xB4"="Teacher.Breaks", "xAB4"="Teacher.BoBr",
"xA5"="Charity.Roof", "xB5"="Charity.Train", "xAB5"="Charity.RT", "xA6"="Recruit.Social", "xB6"="Recruit.Career", "xAB6"="Recruit.SC",
"xA7"="Income.All", "xB7"="Income.Unemployed", "xAB7"="Income.AU"))
View(abE12)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE12"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
library(tidyverse)
abE12 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE12/abE12_raw.csv")
#Delete rows 2 and 3
abE12 <- abE12[-(1:2),]
#Create participant IDs
abE12$pid <- 1:nrow(abE12)
#Create column "dv" with all ratings
abE12[is.na(abE12)] <- 0
abE12 <- mutate(abE12, dv = as.numeric(xA1) +	as.numeric(xB1) + as.numeric(xAB1) + as.numeric(xA2) + as.numeric(xB2) + as.numeric(xAB2) +
as.numeric(xA3) +	as.numeric(xB3) + as.numeric(xAB3) + as.numeric(xA4) + as.numeric(xB4) + as.numeric(xAB4) +
as.numeric(xA5) + as.numeric(xB5) + as.numeric(xAB5) + as.numeric(xA6) + as.numeric(xB6) + as.numeric(xAB6) +
as.numeric(xA7) + as.numeric(xB7) + as.numeric(xAB7))
#Create column "cond" with generic condition
abE12[,"cond"] <- 0
abE12$cond[abE12$xA1 > 0] <- "xA1"
abE12$cond[abE12$xB1 > 0] <- "xB1"
abE12$cond[abE12$xAB1 > 0] <- "xAB1"
abE12$cond[abE12$xA2 > 0] <- "xA2"
abE12$cond[abE12$xB2 > 0] <- "xB2"
abE12$cond[abE12$xAB2 > 0] <- "xAB2"
abE12$cond[abE12$xA3 > 0] <- "xA3"
abE12$cond[abE12$xB3 > 0] <- "xB3"
abE12$cond[abE12$xAB3 > 0] <- "xAB3"
abE12$cond[abE12$xA4 > 0] <- "xA4"
abE12$cond[abE12$xB4 > 0] <- "xB4"
abE12$cond[abE12$xAB4 > 0] <- "xAB4"
abE12$cond[abE12$xA5 > 0] <- "xA5"
abE12$cond[abE12$xB5 > 0] <- "xB5"
abE12$cond[abE12$xAB5 > 0] <- "xAB5"
abE12$cond[abE12$xA6 > 0] <- "xA6"
abE12$cond[abE12$xB6 > 0] <- "xB6"
abE12$cond[abE12$xAB6 > 0] <- "xAB6"
abE12$cond[abE12$xA7 > 0] <- "xA7"
abE12$cond[abE12$xB7 > 0] <- "xB7"
abE12$cond[abE12$xAB7 > 0] <- "xAB7"
#Create column "condLabel"
abE12 <- mutate(abE12, condLabel = cond)
cond <- as.factor(abE12$condLabel)
abE12$condLabel <- plyr::revalue(as.factor(abE12$condLabel), c("xA1"="Drug.A", "xB1"="Drug.B", "xAB1"="Drug.AB", "xA2"="DrugTeach.A", "xB2"="DrugTeach.B", "xAB2"="DrugTeach.AB",
"xA3"="Funds.More", "xB3"="Funds.Highlight", "xAB3"="Funds.MH", "xA4"="Teacher.Bonus", "xB4"="Teacher.Breaks", "xAB4"="Teacher.BoBr",
"xA5"="Charity.Roof", "xB5"="Charity.Train", "xAB5"="Charity.RT", "xA6"="Recruit.Social", "xB6"="Recruit.Career", "xAB6"="Recruit.SC",
"xA7"="Income.All", "xB7"="Income.Unemployed", "xAB7"="Income.AU"))
#Rearrange columns for easier viewing and coding.
abE12 <- abE12%>%select(pid, cond, condLabel, dv, FreeResponse, everything())
View(abE12)
t.tests(abE12$dv ~ abE12$gender)
t.test(abE12$dv ~ abE12$gender)
t.test(abE12$dv ~ abE12$Gender)
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) |(xAB1l > 0) | (xAB1s > 0)), "genetics", 0))
View(abE12)
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE9")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE9 <- read.csv("/Users/gsholtzman/Dropbox/ABI Archive/abE9/abE9.csv")
abE9[is.na(abE9)] <- 0
###THIS WILL HAVE TO BE MOVED TO THE CLEANING R
#Create scenario column
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) | (xAB1l > 0) | (xAB1s > 0)), "genetics", 0))
View(abE9)
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA2 > 0) | (xB2 > 0) | (xAB2l > 0) | (xAB2s > 0)), "genetics"))
View(abE9)
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA2 > 0) | (xB2 > 0) | (xAB2l > 0) | (xAB2s > 0)), "genetics", ))
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA2 > 0) | (xB2 > 0) | (xAB2l > 0) | (xAB2s > 0)), "genetics", abE9$scenario))
View(abE9)
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) | (xAB1l > 0) | (xAB1s > 0)), "genetics", 0))
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA2 > 0) | (xB2 > 0) | (xAB2l > 0) | (xAB2s > 0)), "AV", abE9$scenario))
View(abE9)
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) |
(xAB1l > 0) | (xAB1s > 0)), "genetics", 0))
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA2 > 0) | (xB2 > 0) |
(xAB2l > 0) | (xAB2s > 0)), "AV", abE9$scenario))
View(abE9)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE9"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE1")
library(tidyverse)
abE9 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE9/abE9_raw.csv")
#Delete rows 2 and 3
abE9 <- abE9[-(1:2),]
#Preserve only desired columns and rename columns
abE9 <- select(abE9, oid = ResponseId, xA1,	xB1,	xAB1s, xAB1l,	xA2,	xB2,	xAB2s, xAB2l, scenario,	cond,
condLabel,	dv,	dv_binary, free_response, PlantFood,	GenesAnswer,	Earth	Radioact,	Lasers,
Electrons,	Continents,	Gender,	Antibiotics,	degree,	Degree_spec,	God	Intuition,	Science,
Sex,	Race/Ethnicity,	Age,	Education	Income,	SC0,	SC1)
#Create participant IDs
abE9$pid <- 1:nrow(abE9)
#Create column "dv" with all ratings
abE9[is.na(abE9)] <- 0
abE9 <- mutate(abE9, dv = as.numeric(xA1) +	as.numeric(xB1) + as.numeric(xAB1s) + as.numeric(xAB1l) + as.numeric(xA2) + as.numeric(xB2) + as.numeric(xAB2s) + as.numeric(xAB2l))
#Create column "cond" with generic condition
abE9[,"cond"] <- 0
abE9$cond[abE9$xA1 > 0] <- "xA1"
abE9$cond[abE9$xB1 > 0] <- "xB1"
abE9$cond[abE9$xAB1s > 0] <- "xAB1s"
abE9$cond[abE9$xAB1l > 0] <- "xAB1l"
abE9$cond[abE9$xA2 > 0] <- "xA2"
abE9$cond[abE9$xB2 > 0] <- "xB2"
abE9$cond[abE9$xAB2s > 0] <- "xAB2s"
abE9$cond[abE9$xAB2l > 0] <- "xAB2l"
#Create column "condLabel"
abE9 <- mutate(abE9, condLabel = cond)
cond <- as.factor(abE9$condLabel)
abE9$condLabel <- plyr::revalue(as.factor(abE9$condLabel), c("xA1"="gene.actionable", "xB1"="gene.all", "xAB1s"="gene.ABS", "xAB1l"="gene.ABL", "xA2"="AV.lever", "xB2"="AV.auto", "xAB2s"="AV.ABS",  "xAB2l"="AV.ABL"))
#Create dichotomized responses
abE9 <- abE9 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE9 <- abE9%>%select(pid,cond, condLabel, dv, dv_binary, FreeResponse, everything())
#Save text file
write.csv(abE9, "abE9.csv", row.names=FALSE)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE9"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE1")
library(tidyverse)
abE9 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE9/abE9_raw.csv")
#Delete rows 2 and 3
abE9 <- abE9[-(1:2),]
#Preserve only desired columns and rename columns
abE9 <- select(abE9, oid = ResponseId, xA1,	xB1,	xAB1s, xAB1l,	xA2,	xB2,	xAB2s, xAB2l, free_response	)
#Create participant IDs
abE9$pid <- 1:nrow(abE9)
#Create column "dv" with all ratings
abE9[is.na(abE9)] <- 0
abE9 <- mutate(abE9, dv = as.numeric(xA1) +	as.numeric(xB1) + as.numeric(xAB1s) + as.numeric(xAB1l) + as.numeric(xA2) + as.numeric(xB2) + as.numeric(xAB2s) + as.numeric(xAB2l))
#Create column "cond" with generic condition
abE9[,"cond"] <- 0
abE9$cond[abE9$xA1 > 0] <- "xA1"
abE9$cond[abE9$xB1 > 0] <- "xB1"
abE9$cond[abE9$xAB1s > 0] <- "xAB1s"
abE9$cond[abE9$xAB1l > 0] <- "xAB1l"
abE9$cond[abE9$xA2 > 0] <- "xA2"
abE9$cond[abE9$xB2 > 0] <- "xB2"
abE9$cond[abE9$xAB2s > 0] <- "xAB2s"
abE9$cond[abE9$xAB2l > 0] <- "xAB2l"
#Create column "condLabel"
abE9 <- mutate(abE9, condLabel = cond)
cond <- as.factor(abE9$condLabel)
abE9$condLabel <- plyr::revalue(as.factor(abE9$condLabel), c("xA1"="gene.actionable", "xB1"="gene.all", "xAB1s"="gene.ABS", "xAB1l"="gene.ABL", "xA2"="AV.lever", "xB2"="AV.auto", "xAB2s"="AV.ABS",  "xAB2l"="AV.ABL"))
#Create dichotomized responses
abE9 <- abE9 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE9 <- abE9%>%select(pid,cond, condLabel, dv, dv_binary, FreeResponse, everything())
#Save text file
write.csv(abE9, "abE9.csv", row.names=FALSE)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE9"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE9")
library(tidyverse)
abE9 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE9/abE9_raw.csv")
#Delete rows 2 and 3
abE9 <- abE9[-(1:2),]
#Preserve only desired columns and rename columns
abE9 <- select(abE9, oid = ResponseId, xA1,	xB1,	xAB1s, xAB1l,	xA2,	xB2,	xAB2s, xAB2l, scenario,	cond,
condLabel,	dv,	dv_binary, free_response, PlantFood,	GenesAnswer,	Earth	Radioact,	Lasers,
Electrons,	Continents,	Gender,	Antibiotics,	degree,	Degree_spec,	God	Intuition,	Science,
Sex,	Race/Ethnicity,	Age,	Education	Income,	SC0, SC1)
#Create participant IDs
abE9$pid <- 1:nrow(abE9)
#Create column "dv" with all ratings
abE9[is.na(abE9)] <- 0
abE9 <- mutate(abE9, dv = as.numeric(xA1) +	as.numeric(xB1) + as.numeric(xAB1s) + as.numeric(xAB1l) + as.numeric(xA2) + as.numeric(xB2) + as.numeric(xAB2s) + as.numeric(xAB2l))
#Create column "cond" with generic condition
abE9[,"cond"] <- 0
abE9$cond[abE9$xA1 > 0] <- "xA1"
abE9$cond[abE9$xB1 > 0] <- "xB1"
abE9$cond[abE9$xAB1s > 0] <- "xAB1s"
abE9$cond[abE9$xAB1l > 0] <- "xAB1l"
abE9$cond[abE9$xA2 > 0] <- "xA2"
abE9$cond[abE9$xB2 > 0] <- "xB2"
abE9$cond[abE9$xAB2s > 0] <- "xAB2s"
abE9$cond[abE9$xAB2l > 0] <- "xAB2l"
#Create column "condLabel"
abE9 <- mutate(abE9, condLabel = cond)
cond <- as.factor(abE9$condLabel)
abE9$condLabel <- plyr::revalue(as.factor(abE9$condLabel), c("xA1"="gene.actionable", "xB1"="gene.all", "xAB1s"="gene.ABS", "xAB1l"="gene.ABL", "xA2"="AV.lever", "xB2"="AV.auto", "xAB2s"="AV.ABS",  "xAB2l"="AV.ABL"))
#Create dichotomized responses
abE9 <- abE9 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE9 <- abE9%>%select(pid,cond, condLabel, dv, dv_binary, FreeResponse, everything())
#Save text file
write.csv(abE9, "abE9.csv", row.names=FALSE)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE9"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE9")
library(tidyverse)
abE9 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE9/abE9_raw.csv")
#Delete rows 2 and 3
abE9 <- abE9[-(1:2),]
View(abE9)
#Preserve only desired columns and rename columns
abE9 <- select(abE9, oid = ResponseId, xA1,	xB1,	xAB1s, xAB1l,	xA2,	xB2,	xAB2s, xAB2l, scenario,	cond,
condLabel,	dv,	dv_binary, free_response, PlantFood,	GenesAnswer,	Earth	Radioact,	Lasers,
Electrons,	Continents,	Gender,	Antibiotics,	degree,	Degree_spec,	God	Intuition,	Science,
Sex,	Race/Ethnicity,	Age,	Education	Income,	SC0, SC1)
abE9 <- select(abE9, oid = ResponseId, xA1,	xB1,	xAB1s, xAB1l,	xA2,	xB2,	xAB2s, xAB2l, scenario,	cond,
condLabel,	dv,	dv_binary, free_response, PlantFood,	GenesAnswer,	Earth	Radioact,	Lasers,
Electrons,	Continents,	Gender,	Antibiotics,	degree,	Degree_spec,	God	Intuition,	Science,
Sex,	Race/Ethnicity,	Age,	Education,	Income,	SC0, SC1)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE9"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE9")
library(tidyverse)
abE9 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE9/abE9_raw.csv")
#Delete rows 2 and 3
abE9 <- abE9[-(1:2),]
View(abE9)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE9"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE9")
library(tidyverse)
abE9 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE9/abE9_raw.csv")
#Delete rows 2 and 3
abE9 <- abE9[-(1:2),]
#Preserve only desired columns and rename columns
abE9 <- select(abE9, oid = ResponseId, xA1,	xB1,	xAB1s, xAB1l,	xA2,	xB2,	xAB2s, xAB2l,	free_response, PlantFood,	GenesAnswer,	Earth	Radioact,	Lasers,
Electrons,	Continents,	Gender,	Antibiotics,	degree,	Degree_spec,	God	Intuition,	Science,
Sex,	Race/Ethnicity,	Age,	Education,	Income,	SC0, SC1)
#Create participant IDs
abE9$pid <- 1:nrow(abE9)
#Create column "dv" with all ratings
abE9[is.na(abE9)] <- 0
abE9 <- mutate(abE9, dv = as.numeric(xA1) +	as.numeric(xB1) + as.numeric(xAB1s) + as.numeric(xAB1l) + as.numeric(xA2) + as.numeric(xB2) + as.numeric(xAB2s) + as.numeric(xAB2l))
#Create column "cond" with generic condition
abE9[,"cond"] <- 0
abE9$cond[abE9$xA1 > 0] <- "xA1"
abE9$cond[abE9$xB1 > 0] <- "xB1"
abE9$cond[abE9$xAB1s > 0] <- "xAB1s"
abE9$cond[abE9$xAB1l > 0] <- "xAB1l"
abE9$cond[abE9$xA2 > 0] <- "xA2"
abE9$cond[abE9$xB2 > 0] <- "xB2"
abE9$cond[abE9$xAB2s > 0] <- "xAB2s"
abE9$cond[abE9$xAB2l > 0] <- "xAB2l"
#Create column "condLabel"
abE9 <- mutate(abE9, condLabel = cond)
cond <- as.factor(abE9$condLabel)
abE9$condLabel <- plyr::revalue(as.factor(abE9$condLabel), c("xA1"="gene.actionable", "xB1"="gene.all", "xAB1s"="gene.ABS", "xAB1l"="gene.ABL", "xA2"="AV.lever", "xB2"="AV.auto", "xAB2s"="AV.ABS",  "xAB2l"="AV.ABL"))
#Create dichotomized responses
abE9 <- abE9 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE9 <- abE9%>%select(pid,cond, condLabel, dv, dv_binary, FreeResponse, everything())
#Save text file
write.csv(abE9, "abE9.csv", row.names=FALSE)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE9"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE9")
library(tidyverse)
abE9 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE9/abE9_raw.csv")
abE9 <- abE9[-(1:2),]
abE9 <- select(abE9, oid = ResponseId, xA1,	xB1,	xAB1s, xAB1l,	xA2,	xB2,	xAB2s, xAB2l,	free_response, PlantFood,	GenesAnswer,	Earth	Radioact,	Lasers,
Electrons,	Continents,	Gender,	Antibiotics,	degree,	Degree_spec,	God	Intuition,	Science,
Sex,	Race/Ethnicity,	Age,	Education,	Income,	SC0, SC1)
#Preserve only desired columns and rename columns
abE9 <- select(abE9, oid = ResponseId, xA1,	xB1,	xAB1s, xAB1l,	xA2,	xB2,	xAB2s, xAB2l,	free_response, PlantFood,	GenesAnswer,	Earth,	Radioact,	Lasers,
Electrons,	Continents,	Gender,	Antibiotics,	degree,	Degree_spec,	God,	Intuition,	Science,
Sex,	Race/Ethnicity,	Age,	Education,	Income,	SC0, SC1)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE12"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
library(tidyverse)
abE12 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE12/abE12_raw.csv")
#Delete rows 2 and 3
abE12 <- abE12[-(1:2),]
#Preserve only desired columns and rename columns
abE12 <- select(abE12, oid = ResponseId, xA1,	xB1,	xAB1,	xA2,	xB2,	xAB2,	xA3,	xB3,	xAB3,
xA4,	xB4,	xAB4,	xA5,	xB5,	xAB5,	xA6,	xB6,	xAB6, xA7,	xB7,	xAB7, FreeResponse, everything)
#Create participant IDs
abE12$pid <- 1:nrow(abE12)
#Create column "dv" with all ratings
abE12[is.na(abE12)] <- 0
abE12 <- mutate(abE12, dv = as.numeric(xA1) +	as.numeric(xB1) + as.numeric(xAB1) + as.numeric(xA2) + as.numeric(xB2) + as.numeric(xAB2) +
as.numeric(xA3) +	as.numeric(xB3) + as.numeric(xAB3) + as.numeric(xA4) + as.numeric(xB4) + as.numeric(xAB4) +
as.numeric(xA5) + as.numeric(xB5) + as.numeric(xAB5) + as.numeric(xA6) + as.numeric(xB6) + as.numeric(xAB6) +
as.numeric(xA7) + as.numeric(xB7) + as.numeric(xAB7))
#Create column "cond" with generic condition
abE12[,"cond"] <- 0
abE12$cond[abE12$xA1 > 0] <- "xA1"
abE12$cond[abE12$xB1 > 0] <- "xB1"
abE12$cond[abE12$xAB1 > 0] <- "xAB1"
abE12$cond[abE12$xA2 > 0] <- "xA2"
abE12$cond[abE12$xB2 > 0] <- "xB2"
abE12$cond[abE12$xAB2 > 0] <- "xAB2"
abE12$cond[abE12$xA3 > 0] <- "xA3"
abE12$cond[abE12$xB3 > 0] <- "xB3"
abE12$cond[abE12$xAB3 > 0] <- "xAB3"
abE12$cond[abE12$xA4 > 0] <- "xA4"
abE12$cond[abE12$xB4 > 0] <- "xB4"
abE12$cond[abE12$xAB4 > 0] <- "xAB4"
abE12$cond[abE12$xA5 > 0] <- "xA5"
abE12$cond[abE12$xB5 > 0] <- "xB5"
abE12$cond[abE12$xAB5 > 0] <- "xAB5"
abE12$cond[abE12$xA6 > 0] <- "xA6"
abE12$cond[abE12$xB6 > 0] <- "xB6"
abE12$cond[abE12$xAB6 > 0] <- "xAB6"
abE12$cond[abE12$xA7 > 0] <- "xA7"
abE12$cond[abE12$xB7 > 0] <- "xB7"
abE12$cond[abE12$xAB7 > 0] <- "xAB7"
#Create column "condLabel"
abE12 <- mutate(abE12, condLabel = cond)
cond <- as.factor(abE12$condLabel)
abE12$condLabel <- plyr::revalue(as.factor(abE12$condLabel), c("xA1"="Drug.A", "xB1"="Drug.B", "xAB1"="Drug.AB", "xA2"="DrugTeach.A", "xB2"="DrugTeach.B", "xAB2"="DrugTeach.AB",
"xA3"="Funds.More", "xB3"="Funds.Highlight", "xAB3"="Funds.MH", "xA4"="Teacher.Bonus", "xB4"="Teacher.Breaks", "xAB4"="Teacher.BoBr",
"xA5"="Charity.Roof", "xB5"="Charity.Train", "xAB5"="Charity.RT", "xA6"="Recruit.Social", "xB6"="Recruit.Career", "xAB6"="Recruit.SC",
"xA7"="Income.All", "xB7"="Income.Unemployed", "xAB7"="Income.AU"))
#Create dichotomized responses
abE12 <- abE12 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE12 <- abE12%>%select(pid, cond, condLabel, dv, dv_binary, FreeResponse, everything())
#Save text file
write.csv(abE12, "abE12.csv", row.names=FALSE)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE12"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE12")
library(tidyverse)
abE12 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE12/abE12_raw.csv")
#Delete rows 2 and 3
abE12 <- abE12[-(1:2),]
#Preserve only desired columns and rename columns
abE12 <- select(abE12, oid = ResponseId, xA1,	xB1,	xAB1,	xA2,	xB2,	xAB2,	xA3,	xB3,	xAB3,
xA4,	xB4,	xAB4,	xA5,	xB5,	xAB5,	xA6,	xB6,	xAB6, xA7,	xB7,	xAB7, FreeResponse, everything)
#Create participant IDs
abE12$pid <- 1:nrow(abE12)
#Create column "dv" with all ratings
abE12[is.na(abE12)] <- 0
abE12 <- mutate(abE12, dv = as.numeric(xA1) +	as.numeric(xB1) + as.numeric(xAB1) + as.numeric(xA2) + as.numeric(xB2) + as.numeric(xAB2) +
as.numeric(xA3) +	as.numeric(xB3) + as.numeric(xAB3) + as.numeric(xA4) + as.numeric(xB4) + as.numeric(xAB4) +
as.numeric(xA5) + as.numeric(xB5) + as.numeric(xAB5) + as.numeric(xA6) + as.numeric(xB6) + as.numeric(xAB6) +
as.numeric(xA7) + as.numeric(xB7) + as.numeric(xAB7))
#Create column "cond" with generic condition
abE12[,"cond"] <- 0
abE12$cond[abE12$xA1 > 0] <- "xA1"
abE12$cond[abE12$xB1 > 0] <- "xB1"
abE12$cond[abE12$xAB1 > 0] <- "xAB1"
abE12$cond[abE12$xA2 > 0] <- "xA2"
abE12$cond[abE12$xB2 > 0] <- "xB2"
abE12$cond[abE12$xAB2 > 0] <- "xAB2"
abE12$cond[abE12$xA3 > 0] <- "xA3"
abE12$cond[abE12$xB3 > 0] <- "xB3"
abE12$cond[abE12$xAB3 > 0] <- "xAB3"
abE12$cond[abE12$xA4 > 0] <- "xA4"
abE12$cond[abE12$xB4 > 0] <- "xB4"
abE12$cond[abE12$xAB4 > 0] <- "xAB4"
abE12$cond[abE12$xA5 > 0] <- "xA5"
abE12$cond[abE12$xB5 > 0] <- "xB5"
abE12$cond[abE12$xAB5 > 0] <- "xAB5"
abE12$cond[abE12$xA6 > 0] <- "xA6"
abE12$cond[abE12$xB6 > 0] <- "xB6"
abE12$cond[abE12$xAB6 > 0] <- "xAB6"
abE12$cond[abE12$xA7 > 0] <- "xA7"
abE12$cond[abE12$xB7 > 0] <- "xB7"
abE12$cond[abE12$xAB7 > 0] <- "xAB7"
#Create column "condLabel"
abE12 <- mutate(abE12, condLabel = cond)
cond <- as.factor(abE12$condLabel)
abE12$condLabel <- plyr::revalue(as.factor(abE12$condLabel), c("xA1"="Drug.A", "xB1"="Drug.B", "xAB1"="Drug.AB", "xA2"="DrugTeach.A", "xB2"="DrugTeach.B", "xAB2"="DrugTeach.AB",
"xA3"="Funds.More", "xB3"="Funds.Highlight", "xAB3"="Funds.MH", "xA4"="Teacher.Bonus", "xB4"="Teacher.Breaks", "xAB4"="Teacher.BoBr",
"xA5"="Charity.Roof", "xB5"="Charity.Train", "xAB5"="Charity.RT", "xA6"="Recruit.Social", "xB6"="Recruit.Career", "xAB6"="Recruit.SC",
"xA7"="Income.All", "xB7"="Income.Unemployed", "xAB7"="Income.AU"))
#Create dichotomized responses
abE12 <- abE12 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE12 <- abE12%>%select(pid, cond, condLabel, dv, dv_binary, FreeResponse, everything())
#Save text file
write.csv(abE12, "abE12.csv", row.names=FALSE)
#Create dichotomized responses
abE3 <- abE3 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE3 <- abE12%>%select(pid, cond, condLabel, dv, dv_binary, FreeResponse, everything())
#Save text file
write.csv(abE3, "abE3.csv", row.names=FALSE)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE12"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE12")
library(tidyverse)
abE3 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE12/abE12_raw.csv")
#Create dichotomized responses
abE3 <- abE3 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE3 <- abE12%>%select(pid, cond, condLabel, dv, dv_binary, FreeResponse, everything())
#Save text file
write.csv(abE3, "abE3.csv", row.names=FALSE)
#A/B Illusion Experiment 3: Checklist
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/E3")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
#Load finalized data, exclude participants, and convert all NA to 0
abE3 = read_excel(("abE3.xlsx"), sheet = "Final")
#abE3<-abE3[!(abE3$poles==1),] (This cannot be run yetm until there is a poles variable)
abE3[is.na(abE3)] <- 0
