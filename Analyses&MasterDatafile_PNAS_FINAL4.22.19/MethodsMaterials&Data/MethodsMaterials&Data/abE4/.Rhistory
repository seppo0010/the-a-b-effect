abE6 <- abE6[-(1:2),]
#Preserve only desired columns and rename columns
abE6 <- select(abE6, oid = ResponseId, xA,	xB,	ABS,	ABL, free_response,	sex, race,
age, edu = education, inc = income,	science,	intuition,	god,	SC0)
#Create participant IDs
abE6$pid <- 1:nrow(abE6)
#Create column "dv" with all ratings
abE6[is.na(abE6)] <- 0
abE6 <- mutate(abE6, dv = as.numeric(xA) +	as.numeric(xB) +	as.numeric(ABS) +	as.numeric(ABL))
#Create column "cond" with generic condition
abE6[,"cond"] <- 0
abE6$cond[abE6$xA > 0] <- "xA"
abE6$cond[abE6$xB > 0] <- "xB"
abE6$cond[abE6$ABS > 0] <- "ABS"
abE6$cond[abE6$ABL > 0] <- "ABL"
#Create column "condLabel" (TAILORED TO EXPERIMENT 4)
abE6 <- mutate(abE6, condLabel = cond)
cond <- as.factor(abE6$condLabel)
abE6$condLabel <- plyr::revalue(as.factor(abE6$condLabel), c("xA"="Accelerate", "xB"="Brake", "ABS"="ABshort", "ABL"= "ABlong"))
#Create dichotomized responses
abE9 <- abE9 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE6 <- abE6%>%select(pid,cond, condLabel, dv, dv_binary, free_response, everything())
#Save text file
write.csv(abE6, "abE6.csv", row.names=FALSE)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE6"
#2. "Accelerate"
#3. "Brake"
#4. "ABshort"
#5. "ABlong"
#NOTE: "xA"="Accelerate", "xB"="Brake", "ABS"="abShort", "ABL"= "abLong"
#Clear environment, load packages, import data
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE1")
rm(list = ls())
library(tidyverse)
abE6 <- read_csv("/Users/gsholtzman/Dropbox/ABI Archive/abE6/abE6_raw.csv")
#Delete rows 2 and 3
abE6 <- abE6[-(1:2),]
#Preserve only desired columns and rename columns
abE6 <- select(abE6, oid = ResponseId, xA,	xB,	ABS,	ABL, free_response,	sex, race,
age, edu = education, inc = income,	science,	intuition,	god,	SC0)
#Create participant IDs
abE6$pid <- 1:nrow(abE6)
#Create column "dv" with all ratings
abE6[is.na(abE6)] <- 0
abE6 <- mutate(abE6, dv = as.numeric(xA) +	as.numeric(xB) +	as.numeric(ABS) +	as.numeric(ABL))
#Create column "cond" with generic condition
abE6[,"cond"] <- 0
abE6$cond[abE6$xA > 0] <- "xA"
abE6$cond[abE6$xB > 0] <- "xB"
abE6$cond[abE6$ABS > 0] <- "ABS"
abE6$cond[abE6$ABL > 0] <- "ABL"
#Create column "condLabel" (TAILORED TO EXPERIMENT 4)
abE6 <- mutate(abE6, condLabel = cond)
cond <- as.factor(abE6$condLabel)
abE6$condLabel <- plyr::revalue(as.factor(abE6$condLabel), c("xA"="Accelerate", "xB"="Brake", "ABS"="ABshort", "ABL"= "ABlong"))
#Create dichotomized responses
abE6 <- abE6 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE6 <- abE6%>%select(pid,cond, condLabel, dv, dv_binary, free_response, everything())
#Save text file
write.csv(abE6, "abE6.csv", row.names=FALSE)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE6"
#2. "Accelerate"
#3. "Brake"
#4. "ABshort"
#5. "ABlong"
#NOTE: "xA"="Accelerate", "xB"="Brake", "ABS"="abShort", "ABL"= "abLong"
#Clear environment, load packages, import data
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE6")
rm(list = ls())
library(tidyverse)
abE6 <- read_csv("/Users/gsholtzman/Dropbox/ABI Archive/abE6/abE6_raw.csv")
#Delete rows 2 and 3
abE6 <- abE6[-(1:2),]
#Preserve only desired columns and rename columns
abE6 <- select(abE6, oid = ResponseId, xA,	xB,	ABS,	ABL, free_response,	sex, race,
age, edu = education, inc = income,	science,	intuition,	god,	SC0)
#Create participant IDs
abE6$pid <- 1:nrow(abE6)
#Create column "dv" with all ratings
abE6[is.na(abE6)] <- 0
abE6 <- mutate(abE6, dv = as.numeric(xA) +	as.numeric(xB) +	as.numeric(ABS) +	as.numeric(ABL))
#Create column "cond" with generic condition
abE6[,"cond"] <- 0
abE6$cond[abE6$xA > 0] <- "xA"
abE6$cond[abE6$xB > 0] <- "xB"
abE6$cond[abE6$ABS > 0] <- "ABS"
abE6$cond[abE6$ABL > 0] <- "ABL"
#Create column "condLabel" (TAILORED TO EXPERIMENT 4)
abE6 <- mutate(abE6, condLabel = cond)
cond <- as.factor(abE6$condLabel)
abE6$condLabel <- plyr::revalue(as.factor(abE6$condLabel), c("xA"="Accelerate", "xB"="Brake", "ABS"="ABshort", "ABL"= "ABlong"))
#Create dichotomized responses
abE6 <- abE6 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE6 <- abE6%>%select(pid,cond, condLabel, dv, dv_binary, free_response, everything())
#Save text file
write.csv(abE6, "abE6.csv", row.names=FALSE)
#Clear environment, load packages, import data
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE4")
rm(list = ls())
library(tidyverse)
abE4 <- read_csv("Users/gsholtzman/Dropbox/ABI Archive/abE4/abE4_raw.csv")
#Delete rows 2 and 3
abE4 <- abE4[-(1:2),]
#Preserve only desired columns and rename columns
abE4 <- select(abE4, oid = ResponseId, xA,	xB,	ABS,	ABL, free_response,	sex, race,
age, edu = education, inc = income,	science,	intuition,	god,	SCO)
#Create participant IDs
abE4$pid <- 1:nrow(abE4)
#Create column "dv" with all ratings
abE4[is.na(abE4)] <- 0
abE4 <- mutate(abE4, dv = as.numeric(xA) +	as.numeric(xB) +	as.numeric(ABS) +	as.numeric(ABL))
#Create column "cond" with generic condition
abE4[,"cond"] <- 0
abE4$cond[abE4$xA > 0] <- "xA"
abE4$cond[abE4$xB > 0] <- "xB"
abE4$cond[abE4$ABS > 0] <- "ABS"
abE4$cond[abE4$ABL > 0] <- "ABL"
#Create column "condLabel" (TAILORED TO EXPERIMENT 4)
abE4 <- mutate(abE4, condLabel = cond)
cond <- as.factor(abE4$condLabel)
abE4$condLabel <- plyr::revalue(as.factor(abE4$condLabel), c("xA"="61to80", "xB"="81to100", "ABS"="6181Short", "ABL"= "6181Long"))
#Create dichotomized responses
abE4 <- abE4 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE4 <- abE4%>%select(pid,cond, condLabel, dv, dv_binary, free_response, everything())
#Save text file
write.csv(abE4, "abE4.csv", row.names=FALSE)
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE4")
library(tidyverse)
abE4 <- read_csv("Users/gsholtzman/Dropbox/ABI Archive/abE4/abE4_raw.csv")
#Delete rows 2 and 3
abE4 <- abE4[-(1:2),]
#Preserve only desired columns and rename columns
abE4 <- select(abE4, oid = ResponseId, xA,	xB,	ABS,	ABL, free_response,	sex, race,
age, edu = education, inc = income,	science,	intuition,	god,	SCO)
#Create participant IDs
abE4$pid <- 1:nrow(abE4)
#Create column "dv" with all ratings
abE4[is.na(abE4)] <- 0
abE4 <- mutate(abE4, dv = as.numeric(xA) +	as.numeric(xB) +	as.numeric(ABS) +	as.numeric(ABL))
#Create column "cond" with generic condition
abE4[,"cond"] <- 0
abE4$cond[abE4$xA > 0] <- "xA"
abE4$cond[abE4$xB > 0] <- "xB"
abE4$cond[abE4$ABS > 0] <- "ABS"
abE4$cond[abE4$ABL > 0] <- "ABL"
#Create column "condLabel" (TAILORED TO EXPERIMENT 4)
abE4 <- mutate(abE4, condLabel = cond)
cond <- as.factor(abE4$condLabel)
abE4$condLabel <- plyr::revalue(as.factor(abE4$condLabel), c("xA"="61to80", "xB"="81to100", "ABS"="6181Short", "ABL"= "6181Long"))
#Create dichotomized responses
abE4 <- abE4 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE4 <- abE4%>%select(pid,cond, condLabel, dv, dv_binary, free_response, everything())
#Save text file
write.csv(abE4, "abE4.csv", row.names=FALSE)
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE4")
library(tidyverse)
abE4 <- read_csv("Users/gsholtzman/Dropbox/ABI Archive/abE4/abE4_raw.csv")
#Delete rows 2 and 3
abE4 <- abE4[-(1:2),]
#Preserve only desired columns and rename columns
abE4 <- select(abE4, oid = ResponseId, xA,	xB,	ABS,	ABL, free_response,	sex, race,
age, edu = education, inc = income,	science,	intuition,	god,	SCO)
#Create participant IDs
abE4$pid <- 1:nrow(abE4)
#Create column "dv" with all ratings
abE4[is.na(abE4)] <- 0
abE4 <- mutate(abE4, dv = as.numeric(xA) +	as.numeric(xB) +	as.numeric(ABS) +	as.numeric(ABL))
#Create column "cond" with generic condition
abE4[,"cond"] <- 0
abE4$cond[abE4$xA > 0] <- "xA"
abE4$cond[abE4$xB > 0] <- "xB"
abE4$cond[abE4$ABS > 0] <- "ABS"
abE4$cond[abE4$ABL > 0] <- "ABL"
#Create column "condLabel" (TAILORED TO EXPERIMENT 4)
abE4 <- mutate(abE4, condLabel = cond)
cond <- as.factor(abE4$condLabel)
abE4$condLabel <- plyr::revalue(as.factor(abE4$condLabel), c("xA"="61to80", "xB"="81to100", "ABS"="6181Short", "ABL"= "6181Long"))
#Create dichotomized responses
abE4 <- abE4 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE4")
library(tidyverse)
abE4 <- read_csv("Users/gsholtzman/Dropbox/ABI Archive/abE4/abE4_raw.csv")
#Delete rows 2 and 3
abE4 <- abE4[-(1:2),]
#Preserve only desired columns and rename columns
abE4 <- select(abE4, oid = ResponseId, xA,	xB,	ABS,	ABL, free_response,	sex, race,
age, edu = education, inc = income,	science,	intuition,	god,	SCO)
#Create participant IDs
abE4$pid <- 1:nrow(abE4)
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE4")
library(tidyverse)
abE4 <- read_csv("Users/gsholtzman/Dropbox/ABI Archive/abE4/abE4_raw.csv")
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE4")
library(tidyverse)
abE4 <- read_csv("Users/gsholtzman/Dropbox/ABI Archive/abE4/abE4_raw.csv")
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE4")
library(tidyverse)
abE4 <- read_csv("/Users/gsholtzman/Dropbox/ABI Archive/abE4/abE4_raw.csv")
#Delete rows 2 and 3
abE4 <- abE4[-(1:2),]
#Preserve only desired columns and rename columns
abE4 <- select(abE4, oid = ResponseId, xA,	xB,	ABS,	ABL, free_response,	sex, race,
age, edu = education, inc = income,	science,	intuition,	god,	SCO)
#Create participant IDs
abE4$pid <- 1:nrow(abE4)
#Create column "dv" with all ratings
abE4[is.na(abE4)] <- 0
abE4 <- mutate(abE4, dv = as.numeric(xA) +	as.numeric(xB) +	as.numeric(ABS) +	as.numeric(ABL))
#Create column "cond" with generic condition
abE4[,"cond"] <- 0
abE4$cond[abE4$xA > 0] <- "xA"
abE4$cond[abE4$xB > 0] <- "xB"
abE4$cond[abE4$ABS > 0] <- "ABS"
abE4$cond[abE4$ABL > 0] <- "ABL"
#Create column "condLabel" (TAILORED TO EXPERIMENT 4)
abE4 <- mutate(abE4, condLabel = cond)
cond <- as.factor(abE4$condLabel)
abE4$condLabel <- plyr::revalue(as.factor(abE4$condLabel), c("xA"="61to80", "xB"="81to100", "ABS"="6181Short", "ABL"= "6181Long"))
#Create dichotomized responses
abE4 <- abE4 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Rearrange columns for easier viewing and coding.
abE4 <- abE4%>%select(pid,cond, condLabel, dv, dv_binary, free_response, everything())
#Save text file
write.csv(abE4, "abE4.csv", row.names=FALSE)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE4")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE4 <- read.csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE4/abE4.csv")
abE4[is.na(abE4)] <- 0
AvB <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '61to80')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE4, condLabel == '6181short')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
AvABS <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '6181short')$dv, var.equal = TRUE)))
AvABL <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
BvABS <- tidy((t.test(filter(abE4, condLabel == '61to80')$dv,filter(abE4, condLabel == '6181short')$dv, var.equal = TRUE)))
BvABL <- tidy((t.test(filter(abE4, condLabel == '61to80')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
View(AvABL)
AvB <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '61to80')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE4, condLabel == '6181short')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
AvB <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '61to80')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE4, condLabel == '6181Short')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
AvABS <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '6181Short')$dv, var.equal = TRUE)))
BvABS <- tidy((t.test(filter(abE4, condLabel == '61to80')$dv,filter(abE4, condLabel == '6181Short')$dv, var.equal = TRUE)))
BvABL <- tidy((t.test(filter(abE4, condLabel == '61to80')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
abE4ttests <- t(do.call(rbind, Map(data.frame, 81to100Vs61to80=AvB, 6181LongVs6181Short=ABLvABS, 81to100Vs6181Short=AvABS, 81to100Vs6181Long=AvABL, 61to80Vs6181Short=BvABS, 61to80Vs6181Long=BvABL)))
abE4ttests <- t(do.call(rbind, Map(data.frame, 81to100Vs61to80=AvB, 6181LongVs6181Short=ABLvABS)))
abE4ttests <- t(do.call(rbind, Map(data.frame, '81to100Vs61to80'=AvB, '6181LongVs6181Short'=ABLvABS))), '81to100Vs6181Short'=AvABS, '81to100Vs6181Long'=AvABL, '61to80Vs6181Short'=BvABS, '61to80Vs6181Long'=BvABL)))
#Basic figures and tables
#A/B Illusion Experiment abE4: AVs
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE4")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
#This is new
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE2")
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE2")
library(tidyverse)
#Basic figures and tables
#A/B Illusion Experiment abE4: AVs
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE4")
library(tidyverse)
abE4 <- read_csv("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE4/abE4.csv"))
abE4 <- read_csv("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE4/abE4.csv")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE4[is.na(abE4)] <- 0
ggplot(abE4) +
geom_bar(mapping = aes(x = dv, y = ..prop..), fill = 'light blue', color = 'black', width = .75) +
facet_wrap(~ condLabel) +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,.6)) +
ylab('Proportion of participants choosing each sacle point') +
xlab('Appropriateness')
abE4summary <- summarySE(abE4, measurevar="dv", groupvars="condLabel")
kable(abE4summary, digits = 2)
ggplot(abE4summary, aes(x=condLabel, y=dv)) +
geom_bar(stat="identity", fill = 'light blue', color = 'black', width = .5) +
geom_errorbar(aes(ymin=dv-se, ymax=dv+se), width = .1) +
ylab('Mean Rated Appropriateness') +
xlab('Condition') +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,5))
AvB <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '61to80')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE4, condLabel == '6181Short')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
AvABS <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '6181Short')$dv, var.equal = TRUE)))
BvABS <- tidy((t.test(filter(abE4, condLabel == '61to80')$dv,filter(abE4, condLabel == '6181Short')$dv, var.equal = TRUE)))
BvABL <- tidy((t.test(filter(abE4, condLabel == '61to80')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
abE4ttests <- t(do.call(rbind, Map(data.frame, 81to100Vs61to80=AvB, 6181LongVs6181Short=ABLvABS))), 81to100Vs6181Short=AvABS, 81to100Vs6181Long=AvABL, 61to80Vs6181Short=BvABS, 61to80Vs6181Long=BvABL)))
knitr::opts_chunk$set(echo = TRUE)
#A/B Illusion Experiment 3: Checklist
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE3")
abE3 <- read_csv("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE4/abE3.csv")
abE3 <- read_csv("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE3/abE3.csv")
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE3")
abE3 <- read_csv("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE3/abE3.csv")
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE3[is.na(abE3)] <- 0
abE3$condLabel <- factor(abE3$condLabel, levels = c("badge", "poster", "bp_short", "bp_long"))
ggplot(abE3) +
geom_bar(mapping = aes(x = dv, y = ..prop..), fill = 'light blue', color = 'black', width = .75) +
facet_wrap(~ condLabel) +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,.6)) +
ylab('Proportion of participants choosing each sacle point') +
xlab('Appropriateness')
abE3summary <- summarySE(abE3, measurevar="dv", groupvars="condLabel")
ggplot(abE3summary, aes(x=condLabel, y=dv)) +
geom_bar(stat="identity", fill = 'light blue', color = 'black', width = .5) +
geom_errorbar(aes(ymin=dv-se, ymax=dv+se), width = .1) +
ylab('Mean Rated Appropriateness') +
xlab('Condition') +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,5))
BvP <- tidy((t.test(filter(abE3, condLabel == 'badge')$dv,filter(abE3, condLabel == 'poster')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE3, condLabel == 'bp_short')$dv,filter(abE3, condLabel == 'bp_long')$dv, var.equal = TRUE)))
AvABS <- tidy((t.test(filter(abE3, condLabel == 'badge')$dv,filter(abE3, condLabel == 'bp_short')$dv, var.equal = TRUE)))
AvABL <- tidy((t.test(filter(abE3, condLabel == 'badge')$dv,filter(abE3, condLabel == 'bp_long')$dv, var.equal = TRUE)))
BvABS <- tidy((t.test(filter(abE3, condLabel == 'poster')$dv,filter(abE3, condLabel == 'bp_short')$dv, var.equal = TRUE)))
BvABL <- tidy((t.test(filter(abE3, condLabel == 'poster')$dv,filter(abE3, condLabel == 'bp_long')$dv, var.equal = TRUE)))
abE3ttests <- t(do.call(rbind, Map(data.frame, BadgeVsPoster=BvP, BPlongVsBPshort=ABLvABS, BadgeVsBPshort=AvABS, BadgeVsBPlong=AvABL, PosterVsBPshort=BvABS, PosterVsBPlong=BvABL)))
View(abE3ttests)
#Basic figures and tables
#A/B Illusion Experiment abE4: AVs
rm(list = ls())
#This is new
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE4")
library(tidyverse)
abE4 <- read_csv("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE4/abE4.csv")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE4[is.na(abE4)] <- 0
#Histogram ratings for each condition
ggplot(abE4) +
geom_bar(mapping = aes(x = dv, y = ..prop..), fill = 'light blue', color = 'black', width = .75) +
facet_wrap(~ condLabel) +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,.6)) +
ylab('Proportion of participants choosing each sacle point') +
xlab('Appropriateness')
#Summary statistics
abE4summary <- summarySE(abE4, measurevar="dv", groupvars="condLabel")
kable(abE4summary, digits = 2)
#Means and SDs for each condition
ggplot(abE4summary, aes(x=condLabel, y=dv)) +
geom_bar(stat="identity", fill = 'light blue', color = 'black', width = .5) +
geom_errorbar(aes(ymin=dv-se, ymax=dv+se), width = .1) +
ylab('Mean Rated Appropriateness') +
xlab('Condition') +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,5))
#T-tests for within-type differences and focal analyses
AvB <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '61to80')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE4, condLabel == '6181Short')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
AvABS <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '6181Short')$dv, var.equal = TRUE)))
#AvABL <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
BvABS <- tidy((t.test(filter(abE4, condLabel == '61to80')$dv,filter(abE4, condLabel == '6181Short')$dv, var.equal = TRUE)))
BvABL <- tidy((t.test(filter(abE4, condLabel == '61to80')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
AvB <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '61to80')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE4, condLabel == '6181Short')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
AvABS <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '6181Short')$dv, var.equal = TRUE)))
AvABL <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
BvABS <- tidy((t.test(filter(abE4, condLabel == '61to80')$dv,filter(abE4, condLabel == '6181Short')$dv, var.equal = TRUE)))
BvABL <- tidy((t.test(filt
abE4ttests <- t(do.call(rbind, Map(data.frame, HiVsLo=AvB, ExpLongVsLo=ABLvABS, HiVsExpShort=AvABS, HiVsExpLong=AvABL, LoVsExpShort=BvABS, LoVsExpLong=BvABL)))
#Basic figures and tables
#A/B Illusion Experiment abE4: AVs
rm(list = ls())
#This is new
setwd("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE4")
library(tidyverse)
abE4 <- read_csv("/Users/gsholtzman/Dropbox/ABI Archive Cleaned/abE4/abE4.csv")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE4[is.na(abE4)] <- 0
#Histogram ratings for each condition
ggplot(abE4) +
geom_bar(mapping = aes(x = dv, y = ..prop..), fill = 'light blue', color = 'black', width = .75) +
facet_wrap(~ condLabel) +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,.6)) +
ylab('Proportion of participants choosing each sacle point') +
xlab('Appropriateness')
#Summary statistics
abE4summary <- summarySE(abE4, measurevar="dv", groupvars="condLabel")
kable(abE4summary, digits = 2)
#Means and SDs for each condition
ggplot(abE4summary, aes(x=condLabel, y=dv)) +
geom_bar(stat="identity", fill = 'light blue', color = 'black', width = .5) +
geom_errorbar(aes(ymin=dv-se, ymax=dv+se), width = .1) +
ylab('Mean Rated Appropriateness') +
xlab('Condition') +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,5))
#T-tests for within-type differences and focal analyses
AvB <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '61to80')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE4, condLabel == '6181Short')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
AvABS <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '6181Short')$dv, var.equal = TRUE)))
AvABL <- tidy((t.test(filter(abE4, condLabel == '81to100')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
BvABS <- tidy((t.test(filter(abE4, condLabel == '61to80')$dv,filter(abE4, condLabel == '6181Short')$dv, var.equal = TRUE)))
BvABL <- tidy((t.test(filter(abE4, condLabel == '61to80')$dv,filter(abE4, condLabel == '6181Long')$dv, var.equal = TRUE)))
abE4ttests <- t(do.call(rbind, Map(data.frame, HiVsLo=AvB, ExpLongVsLo=ABLvABS, HiVsExpShort=AvABS, HiVsExpLong=AvABL, LoVsExpShort=BvABS, LoVsExpLong=BvABL)))
install.packages(stringr)
install.packages(rockchalk)
install.packages("rockchalk")
install.packages("stringr")
install.packages("anytime")
knitr::opts_chunk$set(echo = TRUE)
abE4 <- read.csv("/Users/Geoff/Dropbox/Archive ABI/abE5/abE5.csv")
abE5 <- read.csv("/Users/gsholtzman/Dropbox/Archive ABI/abE5/abE5.csv")
library(tidyverse)
library(tidyverse)
library(stringr)
library(rockchalk)
library(tidyverse)
library(stringr)
library(rockchalk)
library(anytime)
abE5 <- read.csv("/Users/gsholtzman/Dropbox/Archive ABI/abE5/abE5.csv")
library(tidyverse)
library(stringr)
library(rockchalk)
library(anytime)
skinny <- read.csv("abE5_exclusions.csv")
skinny <- read.csv("abE5_exclusions.csv")
skinny <- skinny %>% filter(repeat_pollfish == 0)
skinny$condLabel = factor(skinny$condLabel, levels=c("badge", "poster", "bp_short", "bp_long"))
composite <- skinny %>% group_by(condLabel) %>% summarise(appropriateness = mean(dv), dev=sd(dv), count = n()) %>% ungroup() %>% mutate(stderr = dev/sqrt(count))
ggplot(data = skinny) +
geom_histogram(mapping = aes(x = dv, y=..density..), fill='red', col='black',alpha=.6, bins=5) +
facet_wrap(~condLabel)
