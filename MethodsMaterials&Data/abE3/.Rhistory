#Delete rows 2 and 3
abE6 <- abE6[-(1:2),]
#Preserve only desired columns and rename columns
abE6 <- select(abE6, oid = ResponseId, xA,	xB,	ABS,	ABL, free_response,	sex, race,
age, edu = education, inc = income,	science,	intuition,	god,	SC0)
#Create participant IDs
abE6$pid <- 1:nrow(abE6)
#Create column "dv" with all ratings
abE6[is.na(abE6)] <- 0
abE6 <- mutate(abE6, dv = as.numeric(xA) +	as.numeric(xB) +	as.numeric(ABS) +	as.numeric(ABL))
#Create column "cond" with generic condition
abE6[,"cond"] <- 0
abE6$cond[abE6$xA > 0] <- "xA"
abE6$cond[abE6$xB > 0] <- "xB"
abE6$cond[abE6$ABS > 0] <- "ABS"
abE6$cond[abE6$ABL > 0] <- "ABL"
#Create column "condLabel" (TAILORED TO EXPERIMENT 4)
abE6 <- mutate(abE6, condLabel = cond)
cond <- as.factor(abE6$condLabel)
abE6$condLabel <- plyr::revalue(as.factor(abE6$condLabel), c("xA"="Accelerate", "xB"="Brake", "ABS"="ABshort", "ABL"= "ABlong"))
#Rearrange columns for easier viewing and coding.
abE6 <- abE6%>%select(pid,cond, condLabel, dv, free_response, everything())
#Save text file
write.csv(abE6, "abE6.csv", row.names=FALSE)
---
title: "AB Illusion Experiment 3 Markdown"
author: "Geoff Holtzman"
date: "8/7/2017"
output:
html_document: default
pdf_document: default
word_document: default
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
The following substitutions have been made to the generic code
1. Exeriment: abE6
2. Vignette: AVs
3. AB Short: AccBrakeShort
4. AB Long: AccBrakeLong
5. A Condition: Accelerate
6. B Condition: Brake
#Basic figures and tables
```{r echo=FALSE, include=FALSE}
#A/B Illusion Experiment abE6: AVs
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE6 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6/abE6.csv")
abE6[is.na(abE6)] <- 0
#Convert cond into factor variable and reorder conditions
abE6$condLabel <- factor(abE6$condLabel, levels = c("Accelerate", "Brake", "AccBrakeShort", "AccBrakeLong"))
```
#Histogram ratings for each condition
```{r echo=FALSE}
ggplot(abE6) +
geom_bar(mapping = aes(x = dv, y = ..prop..), fill = 'light blue', color = 'black', width = .75) +
facet_wrap(~ condLabel) +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,.6)) +
ylab('Proportion of participants choosing each sacle point') +
xlab('Appropriateness')
```
#Summary statistics
```{r echo=FALSE}
abE6summary <- summarySE(abE6, measurevar="dv", groupvars="condLabel")
kable(abE6summary, digits = 2)
```
#Means and SDs for each condition
```{r echo=FALSE}
ggplot(abE6summary, aes(x=condLabel, y=dv)) +
geom_bar(stat="identity", fill = 'light blue', color = 'black', width = .5) +
geom_errorbar(aes(ymin=dv-se, ymax=dv+se), width = .1) +
ylab('Mean Rated Appropriateness') +
xlab('Condition') +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,5))
```
#T-tests for within-type differences and focal analyses
```{r echo=FALSE}
AvB <- tidy((t.test(filter(abE6, condLabel == 'Accelerate')$dv,filter(abE6, condLabel == 'Brake')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE6, condLabel == 'AccBrakeShort')$dv,filter(abE6, condLabel == 'AccBrakeLong')$dv, var.equal = TRUE)))
AvABS <- tidy((t.test(filter(abE6, condLabel == 'Accelerate')$dv,filter(abE6, condLabel == 'AccBrakeShort')$dv, var.equal = TRUE)))
AvABL <- tidy((t.test(filter(abE6, condLabel == 'Accelerate')$dv,filter(abE6, condLabel == 'AccBrakeLong')$dv, var.equal = TRUE)))
BvABS <- tidy((t.test(filter(abE6, condLabel == 'Brake')$dv,filter(abE6, condLabel == 'AccBrakeShort')$dv, var.equal = TRUE)))
BvABL <- tidy((t.test(filter(abE6, condLabel == 'Brake')$dv,filter(abE6, condLabel == 'AccBrakeLong')$dv, var.equal = TRUE)))
abE6ttests <- t(do.call(rbind, Map(data.frame, AccelerateVsBrake=BvP, AccBrakeLongVsAccBrakeShort=ABLvABS, AccelerateVsAccBrakeShort=AvABS, AccelerateVsAccBrakeLong=AvABL, BrakeVsAccBrakeShort=BvABS, BrakeVsAccBrakeLong=BvABL)))
abE6ttests <- abE6ttests[ , c(1:5) ]
#Rename column names
colnames(abE6ttests) <- c("Mean1", "Mean2", "t statistic", "p-value", "df")
#Print table
kable(abE6ttests, digits = 2)
```
View(abE6summary)
---
title: "AB Illusion Experiment 3 Markdown"
author: "Geoff Holtzman"
date: "8/7/2017"
output:
html_document: default
pdf_document: default
word_document: default
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
The following substitutions have been made to the generic code
1. Exeriment: abE6
2. Vignette: AVs
3. AB Short: AccBrakeShort
4. AB Long: AccBrakeLong
5. A Condition: Accelerate
6. B Condition: Brake
#Basic figures and tables
```{r echo=FALSE, include=FALSE}
#A/B Illusion Experiment abE6: AVs
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE6 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6/abE6.csv")
abE6[is.na(abE6)] <- 0
#Convert cond into factor variable and reorder conditions
abE6$condLabel <- factor(abE6$condLabel, levels = c("Accelerate", "Brake", "AccBrakeShort", "AccBrakeLong"))
```
#Histogram ratings for each condition
```{r echo=FALSE}
ggplot(abE6) +
geom_bar(mapping = aes(x = dv, y = ..prop..), fill = 'light blue', color = 'black', width = .75) +
facet_wrap(~ condLabel) +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,.6)) +
ylab('Proportion of participants choosing each sacle point') +
xlab('Appropriateness')
```
#Summary statistics
```{r echo=FALSE}
abE6summary <- summarySE(abE6, measurevar="dv", groupvars="condLabel")
kable(abE6summary, digits = 2)
```
#Means and SDs for each condition
```{r echo=FALSE}
ggplot(abE6summary, aes(x=condLabel, y=dv)) +
geom_bar(stat="identity", fill = 'light blue', color = 'black', width = .5) +
geom_errorbar(aes(ymin=dv-se, ymax=dv+se), width = .1) +
ylab('Mean Rated Appropriateness') +
xlab('Condition') +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,5))
```
#T-tests for within-type differences and focal analyses
```{r echo=FALSE}
AvB <- tidy((t.test(filter(abE6, condLabel == 'Accelerate')$dv,filter(abE6, condLabel == 'Brake')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE6, condLabel == 'AccBrakeShort')$dv,filter(abE6, condLabel == 'AccBrakeLong')$dv, var.equal = TRUE)))
AvABS <- tidy((t.test(filter(abE6, condLabel == 'Accelerate')$dv,filter(abE6, condLabel == 'AccBrakeShort')$dv, var.equal = TRUE)))
AvABL <- tidy((t.test(filter(abE6, condLabel == 'Accelerate')$dv,filter(abE6, condLabel == 'AccBrakeLong')$dv, var.equal = TRUE)))
BvABS <- tidy((t.test(filter(abE6, condLabel == 'Brake')$dv,filter(abE6, condLabel == 'AccBrakeShort')$dv, var.equal = TRUE)))
BvABL <- tidy((t.test(filter(abE6, condLabel == 'Brake')$dv,filter(abE6, condLabel == 'AccBrakeLong')$dv, var.equal = TRUE)))
abE6ttests <- t(do.call(rbind, Map(data.frame, AccelerateVsBrake=BvP, AccBrakeLongVsAccBrakeShort=ABLvABS, AccelerateVsAccBrakeShort=AvABS, AccelerateVsAccBrakeLong=AvABL, BrakeVsAccBrakeShort=BvABS, BrakeVsAccBrakeLong=BvABL)))
abE6ttests <- abE6ttests[ , c(1:5) ]
#Rename column names
colnames(abE6ttests) <- c("Mean1", "Mean2", "t statistic", "p-value", "df")
#Print table
kable(abE6ttests, digits = 2)
```
---
title: "AB Illusion Experiment 3 Markdown w t-test table"
author: "Geoff Holtzman"
date: "8/7/2017"
output:
word_document: default
pdf_document: default
html_document: default
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r abE3}
#A/B Illusion Experiment 3: Checklist
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/E3")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
#Load finalized data, exclude participants, and convert all NA to 0
abE3 = read_excel(("abE3.xlsx"), sheet = "Final")
#abE3<-abE3[!(abE3$poles==1),] (This cannot be run yetm until there is a poles variable)
abE3[is.na(abE3)] <- 0
#Convert cond into factor variable and reorder conditions
abE3$condLabel <- factor(abE3$condLabel, levels = c("badge", "poster", "bp_short", "bp_long"))
# Histogram of all ratings for each condition
# "..prop.." means show proportions, not frequencies
# ~facet_wrap says to split into panels by factor, rather than display all at once.
ggplot(abE3) +
geom_bar(mapping = aes(x = dv, y = ..prop..), fill = 'light blue', color = 'black', width = .75) +
facet_wrap(~ condLabel) +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,.6)) +
ylab('Proportion of participants choosing each sacle point') +
xlab('Appropriateness')
#Get summary statistics and print pretty table; delete second chunk for markdown
#***add to existing markdown***#
abE3summary <- summarySE(abE3, measurevar="dv", groupvars="condLabel")
kable(abE3summary, digits = 2)
# Graph means for each condition (with SE bars)
#stat=identity means use exactly what DV says; the default for geom_bar is counts or something.
ggplot(abE3summary, aes(x=condLabel, y=dv)) +
geom_bar(stat="identity", fill = 'light blue', color = 'black', width = .5) +
geom_errorbar(aes(ymin=dv-se, ymax=dv+se), width = .1) +
ylab('Mean Rated Appropriateness') +
xlab('Condition') +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,5))
#Create dataframes of each set of t-test after tidying with broom::tidy
BvP <- tidy((t.test(filter(abE3, condLabel == 'badge')$dv,filter(abE3, condLabel == 'poster')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE3, condLabel == 'bp_short')$dv,filter(abE3, condLabel == 'bp_long')$dv, var.equal = TRUE)))
AvABS <- tidy((t.test(filter(abE3, condLabel == 'badge')$dv,filter(abE3, condLabel == 'bp_short')$dv, var.equal = TRUE)))
AvABL <- tidy((t.test(filter(abE3, condLabel == 'badge')$dv,filter(abE3, condLabel == 'bp_long')$dv, var.equal = TRUE)))
BvABS <- tidy((t.test(filter(abE3, condLabel == 'poster')$dv,filter(abE3, condLabel == 'bp_short')$dv, var.equal = TRUE)))
BvABL <- tidy((t.test(filter(abE3, condLabel == 'poster')$dv,filter(abE3, condLabel == 'bp_long')$dv, var.equal = TRUE)))
#Bind all t-tests into a single dataframe; transpose with t() function to right of <-
abE3ttests <- t(do.call(rbind, Map(data.frame, BadgeVsPoster=BvP, BPlongVsBPshort=ABLvABS, BadgeVsBPshort=AvABS, BadgeVsBPlong=AvABL, PosterVsBPshort=BvABS, PosterVsBPlong=BvABL)))
#Include only first five rows
abE3ttests <- abE3ttests[ , c(1:5) ]
#Rename column names
colnames(abE3ttests) <- c("Mean1", "Mean2", "t statistic", "p-value", "df")
#Print table
kable(abE3ttests, digits = 3)
```
---
title: "AB Illusion Experiment 3 Markdown w t-test table"
author: "Geoff Holtzman"
date: "8/7/2017"
output:
word_document: default
pdf_document: default
html_document: default
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r abE3}
#A/B Illusion Experiment 3: Checklist
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE3")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
#Load finalized data, exclude participants, and convert all NA to 0
abE3 = read_excel(("abE3.xlsx"), sheet = "Final")
#abE3<-abE3[!(abE3$poles==1),] (This cannot be run yetm until there is a poles variable)
abE3[is.na(abE3)] <- 0
#Convert cond into factor variable and reorder conditions
abE3$condLabel <- factor(abE3$condLabel, levels = c("badge", "poster", "bp_short", "bp_long"))
# Histogram of all ratings for each condition
# "..prop.." means show proportions, not frequencies
# ~facet_wrap says to split into panels by factor, rather than display all at once.
ggplot(abE3) +
geom_bar(mapping = aes(x = dv, y = ..prop..), fill = 'light blue', color = 'black', width = .75) +
facet_wrap(~ condLabel) +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,.6)) +
ylab('Proportion of participants choosing each sacle point') +
xlab('Appropriateness')
#Get summary statistics and print pretty table; delete second chunk for markdown
#***add to existing markdown***#
abE3summary <- summarySE(abE3, measurevar="dv", groupvars="condLabel")
kable(abE3summary, digits = 2)
# Graph means for each condition (with SE bars)
#stat=identity means use exactly what DV says; the default for geom_bar is counts or something.
ggplot(abE3summary, aes(x=condLabel, y=dv)) +
geom_bar(stat="identity", fill = 'light blue', color = 'black', width = .5) +
geom_errorbar(aes(ymin=dv-se, ymax=dv+se), width = .1) +
ylab('Mean Rated Appropriateness') +
xlab('Condition') +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,5))
#Create dataframes of each set of t-test after tidying with broom::tidy
BvP <- tidy((t.test(filter(abE3, condLabel == 'badge')$dv,filter(abE3, condLabel == 'poster')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE3, condLabel == 'bp_short')$dv,filter(abE3, condLabel == 'bp_long')$dv, var.equal = TRUE)))
AvABS <- tidy((t.test(filter(abE3, condLabel == 'badge')$dv,filter(abE3, condLabel == 'bp_short')$dv, var.equal = TRUE)))
AvABL <- tidy((t.test(filter(abE3, condLabel == 'badge')$dv,filter(abE3, condLabel == 'bp_long')$dv, var.equal = TRUE)))
BvABS <- tidy((t.test(filter(abE3, condLabel == 'poster')$dv,filter(abE3, condLabel == 'bp_short')$dv, var.equal = TRUE)))
BvABL <- tidy((t.test(filter(abE3, condLabel == 'poster')$dv,filter(abE3, condLabel == 'bp_long')$dv, var.equal = TRUE)))
#Bind all t-tests into a single dataframe; transpose with t() function to right of <-
abE3ttests <- t(do.call(rbind, Map(data.frame, BadgeVsPoster=BvP, BPlongVsBPshort=ABLvABS, BadgeVsBPshort=AvABS, BadgeVsBPlong=AvABL, PosterVsBPshort=BvABS, PosterVsBPlong=BvABL)))
#Include only first five rows
abE3ttests <- abE3ttests[ , c(1:5) ]
#Rename column names
colnames(abE3ttests) <- c("Mean1", "Mean2", "t statistic", "p-value", "df")
#Print table
kable(abE3ttests, digits = 3)
```
---
title: "AB Illusion Experiment 3 Markdown w t-test table"
author: "Geoff Holtzman"
date: "8/7/2017"
output:
word_document: default
pdf_document: default
html_document: default
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r abE3}
#A/B Illusion Experiment 3: Checklist
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE3")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
#Load finalized data, exclude participants, and convert all NA to 0
abE3 = read_excel(("abE3.xlsx"), sheet = "Final")
#abE3<-abE3[!(abE3$poles==1),] (This cannot be run yetm until there is a poles variable)
abE3[is.na(abE3)] <- 0
#Convert cond into factor variable and reorder conditions
abE3$condLabel <- factor(abE3$condLabel, levels = c("badge", "poster", "bp_short", "bp_long"))
# Histogram of all ratings for each condition
# "..prop.." means show proportions, not frequencies
# ~facet_wrap says to split into panels by factor, rather than display all at once.
ggplot(abE3) +
geom_bar(mapping = aes(x = dv, y = ..prop..), fill = 'light blue', color = 'black', width = .75) +
facet_wrap(~ condLabel) +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,.6)) +
ylab('Proportion of participants choosing each sacle point') +
xlab('Appropriateness')
#Get summary statistics and print pretty table; delete second chunk for markdown
#***add to existing markdown***#
abE3summary <- summarySE(abE3, measurevar="dv", groupvars="condLabel")
kable(abE3summary, digits = 2)
# Graph means for each condition (with SE bars)
#stat=identity means use exactly what DV says; the default for geom_bar is counts or something.
ggplot(abE3summary, aes(x=condLabel, y=dv)) +
geom_bar(stat="identity", fill = 'light blue', color = 'black', width = .5) +
geom_errorbar(aes(ymin=dv-se, ymax=dv+se), width = .1) +
ylab('Mean Rated Appropriateness') +
xlab('Condition') +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,5))
#Create dataframes of each set of t-test after tidying with broom::tidy
BvP <- tidy((t.test(filter(abE3, condLabel == 'badge')$dv,filter(abE3, condLabel == 'poster')$dv, var.equal = TRUE)))
ABLvABS <- tidy((t.test(filter(abE3, condLabel == 'bp_short')$dv,filter(abE3, condLabel == 'bp_long')$dv, var.equal = TRUE)))
AvABS <- tidy((t.test(filter(abE3, condLabel == 'badge')$dv,filter(abE3, condLabel == 'bp_short')$dv, var.equal = TRUE)))
AvABL <- tidy((t.test(filter(abE3, condLabel == 'badge')$dv,filter(abE3, condLabel == 'bp_long')$dv, var.equal = TRUE)))
BvABS <- tidy((t.test(filter(abE3, condLabel == 'poster')$dv,filter(abE3, condLabel == 'bp_short')$dv, var.equal = TRUE)))
BvABL <- tidy((t.test(filter(abE3, condLabel == 'poster')$dv,filter(abE3, condLabel == 'bp_long')$dv, var.equal = TRUE)))
#Bind all t-tests into a single dataframe; transpose with t() function to right of <-
abE3ttests <- t(do.call(rbind, Map(data.frame, BadgeVsPoster=BvP, BPlongVsBPshort=ABLvABS, BadgeVsBPshort=AvABS, BadgeVsBPlong=AvABL, PosterVsBPshort=BvABS, PosterVsBPlong=BvABL)))
#Include only first five rows
abE3ttests <- abE3ttests[ , c(1:5) ]
#Rename column names
colnames(abE3ttests) <- c("Mean1", "Mean2", "t statistic", "p-value", "df")
#Print table
kable(abE3ttests, digits = 3)
```
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6")
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE6 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6/abE6.csv")
abE6[is.na(abE6)] <- 0
abE6$condLabel <- factor(abE6$condLabel, levels = c("Accelerate", "Brake", "AccBrakeShort", "AccBrakeLong"))
```{r echo=FALSE}
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```{r echo=FALSE, include=FALSE}
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6")
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE6 <- read.csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6/abE6.csv")
abE6[is.na(abE6)] <- 0
abE6$condLabel <- factor(abE6$condLabel, levels = c("Accelerate", "Brake", "AccBrakeShort", "AccBrakeLong"))
```{r echo=FALSE}
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6")
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE6 <- read.csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6/abE6.csv")
abE6[is.na(abE6)] <- 0
abE6$condLabel <- factor(abE6$condLabel, levels = c("Accelerate", "Brake", "AccBrakeShort", "AccBrakeLong"))
View(abE6)
```{r echo=FALSE, include=FALSE}
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6")
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE6 <- read.csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6/abE6.csv")
abE6[is.na(abE6)] <- 0
abE6$condLabel <- factor(abE6$condLabel, levels = c("Accelerate", "Brake", "AccBrakeShort", "AccBrakeLong"))
View(abE6)
```{r echo=FALSE, include=FALSE}
View(abE6)
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6")
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE6 <- read.csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE6/abE6.csv")
View(abE6)
abE6[is.na(abE6)] <- 0
View(abE6)
abE6$condLabel <- factor(abE6$condLabel, levels = c("Accelerate", "Brake", "AccBrakeShort", "AccBrakeLong"))
View(abE6)
```{r echo=FALSE, include=FALSE}
```{r echo=FALSE}
ggplot(abE6) +
geom_bar(mapping = aes(x = dv, y = ..prop..), fill = 'light blue', color = 'black', width = .75) +
facet_wrap(~ condLabel) +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
ylim(c(0,.6)) +
ylab('Proportion of participants choosing each sacle point') +
xlab('Appropriateness')
abE6summary <- summarySE(abE6, measurevar="dv", groupvars="condLabel")
kable(abE6summary, digits = 2)
