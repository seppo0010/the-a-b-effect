theme(title = element_text(size=10, face = "bold")) +
ylab('Myths Believed') +
xlab('Psychology Classes Taken') +
labs(fill="Survey Method") +
theme(text = element_text(size=7, color = "black")) +
theme(axis.text = element_text(size=7)) +
theme(legend.position="none") +
theme(legend.text = element_text(size=7)) +
theme(legend.position="bottom") +
labs(color="Survey \nMethod") +
scale_y_continuous(limits=c(0, 9), expand = c(0,0), breaks = seq(0, 9, 1)) +
scale_x_continuous(expand = c(0,.3), breaks=c(1, 2, 3, 4), minor_breaks = c(1, 2, 3, 4),
labels=c("0", "1", "2", "3+"))
neuromyths <- read_excel("/Users/gsholtzman/Google Drive/Geisinger 2017/Neuromyths/Neuromyths analysis/Neuromyths Full 170815.xlsx")
neuromyths <- neuromyths[!is.na(neuromyths$classes),]
neuromyths.classes <- summarySE(neuromyths, measurevar="totalneuroyn", groupvars=c("method", "classes"))
Figure2b <- ggplot(neuromyths.classes, aes(x=classes, y=totalneuroyn, color=method)) +
geom_line (stat="identity", size = .7) +
geom_errorbar(aes(ymin=totalneuroyn-se, ymax=totalneuroyn+se), width = .05, size = .7) +
ggtitle('A') +
theme(title = element_text(size=10, face = "bold")) +
ylab('Myths Believed') +
xlab('Psychology Classes Taken') +
labs(fill="Survey Method") +
theme(text = element_text(size=7, color = "black")) +
theme(axis.text = element_text(size=7)) +
theme(legend.position="none") +
theme(legend.text = element_text(size=7)) +
theme(legend.position="bottom") +
labs(color="Survey \nMethod") +
scale_y_continuous(limits=c(0, 9), expand = c(0,0), breaks = seq(0, 9, 1)) +
scale_x_continuous(expand = c(0,.3), breaks=c(1, 2, 3, 4), minor_breaks = c(1, 2, 3, 4),
labels=c("0", "1", "2", "3+")) +
ggsave("classes.png", width = 2.9, height = 2.9,
dpi = 300)
neuromyths <- read_excel("/Users/gsholtzman/Google Drive/Geisinger 2017/Neuromyths/Neuromyths analysis/Neuromyths Full 170815.xlsx")
neuromyths <- neuromyths[!is.na(neuromyths$classes),]
neuromyths.classes <- summarySE(neuromyths, measurevar="totalneuroyn", groupvars=c("method", "classes"))
Figure2b <- ggplot(neuromyths.classes, aes(x=classes, y=totalneuroyn, color=method)) +
geom_line (stat="identity", size = .7) +
geom_errorbar(aes(ymin=totalneuroyn-se, ymax=totalneuroyn+se), width = .05, size = .7) +
ggtitle('A') +
theme(title = element_text(size=10, face = "bold")) +
ylab('Myths Believed') +
xlab('Psychology Classes Taken') +
labs(fill="Survey Method") +
theme(text = element_text(size=7, color = "black")) +
theme(axis.text = element_text(size=7)) +
theme(legend.position="none") +
theme(legend.text = element_text(size=7)) +
theme(legend.position="bottom") +
labs(color="Survey \nMethod") +
scale_y_continuous(limits=c(0, 9), expand = c(0,0), breaks = seq(0, 9, 1)) +
scale_x_continuous(expand = c(0,.3), breaks=c(1, 2, 3, 4), minor_breaks = c(1, 2, 3, 4),
labels=c("0", "1", "2", "3+")) +
ggsave("classes.png", width = 2.9, height = 2.9,
dpi = 300)
#NEUROMYTHS ANALYSES
#Clear console, load packages and data
rm(list = ls())
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
library(reshape)
neuromyths <- read_excel("/Users/gsholtzman/Google Drive/Geisinger 2017/Neuromyths/Neuromyths analysis/Neuromyths Full 170815.xlsx")
#Create columns for weighted responses, by item and overall
neuromyths <- mutate(neuromyths, percentW = dichotomized750weights * percentyn,
phoneW = dichotomized750weights *  phoneyn, vaccinesW = dichotomized750weights *	vaccinesyn,
practiceW =  dichotomized750weights *practiceyn, staringW =  dichotomized750weights *	staringyn,
mozartW =  dichotomized750weights *	mozartyn, hemiW =  dichotomized750weights *	hemiyn,
instinctsW =  dichotomized750weights * instinctsyn, subliminalW =  dichotomized750weights *	subliminalyn,
totalneuroW =  dichotomized750weights * totalneuroyn)
#Create long format dataframe for easier figure-making
neuromythsLong <- gather(neuromyths, 'percentW', 'phoneW','vaccinesW','practiceW','staringW',
'mozartW','hemiW','instinctsW','subliminalW', key = "Myth", value = "Agreement")
#Create aggregated dataframe because #position="dodge"wasn't working right.
neuromythsLong2 <- aggregate(neuromythsLong$Agreement/7.5, by=list(neuromythsLong$Myth, neuromythsLong$method), FUN=sum)
neuromyths <- read_excel("/Users/gsholtzman/Google Drive/Geisinger 2017/Neuromyths/Neuromyths analysis/Neuromyths Full 170815.xlsx")
neuromyths <- neuromyths[!is.na(neuromyths$edunum),]
neuromyths <- mutate(neuromyths, edunumrev = 5 - edunum)
neuromyths.edunumrev <- summarySE(neuromyths, measurevar="totalneuroyn", groupvars=c("method", "edunumrev"))
Figure2a <- ggplot(neuromyths.edunumrev, aes(x=edunumrev, y=totalneuroyn, color=method)) +
geom_line (stat="identity", size = .7) +
geom_errorbar(aes(ymin=totalneuroyn-se, ymax=totalneuroyn+se), width = .05, size = .7) +
ggtitle('A') +
theme(title = element_text(size=10, face = "bold")) +
ylab('Myths Believed') +
xlab('Education Level') +
labs(fill="Survey Method") +
theme(text = element_text(size=7, color = "black")) +
theme(axis.text = element_text(size=7)) +
theme(legend.position="none") +
scale_y_continuous(limits=c(0, 9), expand = c(0,0), breaks = seq(0, 9, 1)) +
scale_x_continuous(expand = c(0,.3), breaks=c(1, 2, 3, 4), minor_breaks = c(1, 2, 3, 4),
labels=c("No College", "Some College", "College Grad", "Grad School")) +
ggsave("education.png", width = 2.9, height = 2.9,
dpi = 300)
neuromyths <- read_excel("/Users/gsholtzman/Google Drive/Geisinger 2017/Neuromyths/Neuromyths analysis/Neuromyths Full 170815.xlsx")
neuromyths <- neuromyths[!is.na(neuromyths$edunum),]
neuromyths <- mutate(neuromyths, edunumrev = 5 - edunum)
neuromyths.edunumrev <- summarySE(neuromyths, measurevar="totalneuroyn", groupvars=c("method", "edunumrev"))
Figure2a <- ggplot(neuromyths.edunumrev, aes(x=edunumrev, y=totalneuroyn, color=method)) +
geom_line (stat="identity", size = .7) +
geom_errorbar(aes(ymin=totalneuroyn-se, ymax=totalneuroyn+se), width = .05, size = .7) +
ggtitle('A') +
theme(title = element_text(size=10, face = "bold")) +
ylab('Myths Believed') +
xlab('Education Level') +
labs(fill="Survey Method") +
theme(text = element_text(size=7, color = "black")) +
theme(axis.text = element_text(size=7)) +
theme(legend.position="none") +
scale_y_continuous(limits=c(0, 9), expand = c(0,0), breaks = seq(0, 9, 1)) +
scale_x_continuous(expand = c(0,.3), breaks=c(1, 2, 3, 4), minor_breaks = c(1, 2, 3, 4),
labels=c("No College", "Some College", "College Grad", "Grad School")) +
ggsave("education.png", width = 2.9, height = 2.9,
dpi = 300)
rm(list = ls())
setwd("/Users/pheck1/Dropbox/Geisinger/AB_Illusion/AB Illusion Files/Compiled Data/")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
# library(kableExtra)
library(broom)
#read in the desired worksheet
df = read_excel("/Users/pheck1/Dropbox/Geisinger/AB_Illusion/AB Illusion Files/Compiled Data/ABI_MasterDatafile_11.6.xlsx", sheet = "CompiledData11.6")
#Keep only useful columns (here, grouping variables and the dv)
df <- df[,c(1:13)]
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE9")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE9 <- read.csv("Users/gsholtzman/Dropbox/ABI Archive/abE9/abE9.csv")
abE9[is.na(abE9)] <- 0
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE9")
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE9 <- read.csv("/Users/gsholtzman/Dropbox/ABI Archive/abE9/abE9.csv")
abE9[is.na(abE9)] <- 0
View(abE9)
###THIS WILL HAVE TO BE MOVED TO THE CLEANING R
#Create dichotomized responses
abE9 <- abE9 %>%
mutate(Scenario1 = ifelse(((xA1 > 0) | (xA2 > 0) | (xAB1l > 0) | (xAB1s > 0)), 1, 0))
View(abE9)
abE9 <- abE9 %>%
mutate(Scenario1 = ifelse(((xA1 > 0) | (xA2 > 0) | (xAB1l > 0) | (xAB1s > 0)), 1, 0))
#Rearrange columns for easier viewing and coding.
abE9 <- abE9%>%select(pid,cond, condLabel, Scenario1, dv, dv_binary, FreeResponse, everything())
View(abE9)
abE9 <- abE9%>%select(pid, cond, condLabel, Scenario1, dv, dv_binary, FreeResponse, everything())
View(abE9)
abE9 <- abE9 %>%
mutate(Scenario1 = ifelse(((xA1 > 0) | (xA2 > 0) | (xAB1l > 0) | (xAB1s > 0)), 1, 0))
abE9 <- abE9%>%select(pid, cond, condLabel, Scenario1, dv, FreeResponse, everything())
View(abE9)
abE9 <- abE9 %>%
mutate(Scenario1 = ifelse(((xA1 > 0) | (xB1 > 0) | (xAB1l > 0) | (xAB1s > 0)), 1, 0))
abE9 <- abE9%>%select(pid, cond, condLabel, Scenario1, dv, FreeResponse, everything())
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) | (xAB1l > 0) | (xAB1s > 0)), "genetics", 0))
abE9 <- abE9%>%select(pid, cond, condLabel, Scenario1, dv, FreeResponse, everything())
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) | (xAB1l > 0) | (xAB1s > 0)), "genetics", 0))
abE9 <- abE9%>%select(pid, cond, condLabel, scenario, dv, FreeResponse, everything())
View(abE9)
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE9")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE9 <- read.csv("/Users/gsholtzman/Dropbox/ABI Archive/abE9/abE9.csv")
abE9[is.na(abE9)] <- 0
###THIS WILL HAVE TO BE MOVED TO THE CLEANING R
#Create dichotomized responses
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) | (xAB1l > 0) | (xAB1s > 0)), "genetics", "AV"))
#Rearrange columns for easier viewing and coding.
abE9 <- abE9%>%select(pid, cond, condLabel, scenario, dv, dv_binary, FreeResponse, everything())
View(abE9)
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE9")
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE9 <- read.csv("/Users/gsholtzman/Dropbox/ABI Archive/abE9/abE9.csv")
abE9[is.na(abE9)] <- 0
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) | (xAB1l > 0) | (xAB1s > 0)), "genetics", "AV"))
View(abE9)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE9"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE1")
library(tidyverse)
abE9 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE9/abE9_raw.csv")
#Delete rows 2 and 3
abE9 <- abE9[-(1:2),]
#Preserve only desired columns and rename columns
abE9 <- select(abE9, oid = ResponseId, xA1,	xB1,	xAB1s, xAB1l,	xA2,	xB2,	xAB2s, xAB2l, free_response	)
#Create participant IDs
abE9$pid <- 1:nrow(abE9)
#Create column "dv" with all ratings
abE9[is.na(abE9)] <- 0
abE9 <- mutate(abE9, dv = as.numeric(xA1) +	as.numeric(xB1) + as.numeric(xAB1s) + as.numeric(xAB1l) + as.numeric(xA2) + as.numeric(xB2) + as.numeric(xAB2s) + as.numeric(xAB2l))
#Create column "cond" with generic condition
abE9[,"cond"] <- 0
abE9$cond[abE9$xA1 > 0] <- "xA1"
abE9$cond[abE9$xB1 > 0] <- "xB1"
abE9$cond[abE9$xAB1s > 0] <- "xAB1s"
abE9$cond[abE9$xAB1l > 0] <- "xAB1l"
abE9$cond[abE9$xA2 > 0] <- "xA2"
abE9$cond[abE9$xB2 > 0] <- "xB2"
abE9$cond[abE9$xAB2s > 0] <- "xAB2s"
abE9$cond[abE9$xAB2l > 0] <- "xAB2l"
#Create column "condLabel"
abE9 <- mutate(abE9, condLabel = cond)
cond <- as.factor(abE9$condLabel)
abE9$condLabel <- plyr::revalue(as.factor(abE9$condLabel), c("xA1"="gene.actionable", "xB1"="gene.all", "xAB1s"="gene.ABS", "xAB1l"="gene.ABL", "xA2"="AV.lever", "xB2"="AV.auto", "xAB2s"="AV.ABS",  "xAB2l"="AV.ABL"))
#Create dichotomized responses
abE9 <- abE9 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Create scenario column
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) | (xAB1l > 0) | (xAB1s > 0)), "genetics", "AV"))
#Rearrange columns for easier viewing and coding.
abE9 <- abE9%>%select(pid, scenario, cond, condLabel, dv, dv_binary, FreeResponse, everything())
#Save text file
write.csv(abE9, "abE9.csv", row.names=FALSE)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE9"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE9")
library(tidyverse)
abE9 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE9/abE9_raw.csv")
#Delete rows 2 and 3
abE9 <- abE9[-(1:2),]
#Preserve only desired columns and rename columns
abE9 <- select(abE9, oid = ResponseId, xA1,	xB1,	xAB1s, xAB1l,	xA2,	xB2,	xAB2s, xAB2l, free_response	)
#Create participant IDs
abE9$pid <- 1:nrow(abE9)
#Create column "dv" with all ratings
abE9[is.na(abE9)] <- 0
abE9 <- mutate(abE9, dv = as.numeric(xA1) +	as.numeric(xB1) + as.numeric(xAB1s) + as.numeric(xAB1l) + as.numeric(xA2) + as.numeric(xB2) + as.numeric(xAB2s) + as.numeric(xAB2l))
#Create column "cond" with generic condition
abE9[,"cond"] <- 0
abE9$cond[abE9$xA1 > 0] <- "xA1"
abE9$cond[abE9$xB1 > 0] <- "xB1"
abE9$cond[abE9$xAB1s > 0] <- "xAB1s"
abE9$cond[abE9$xAB1l > 0] <- "xAB1l"
abE9$cond[abE9$xA2 > 0] <- "xA2"
abE9$cond[abE9$xB2 > 0] <- "xB2"
abE9$cond[abE9$xAB2s > 0] <- "xAB2s"
abE9$cond[abE9$xAB2l > 0] <- "xAB2l"
#Create column "condLabel"
abE9 <- mutate(abE9, condLabel = cond)
cond <- as.factor(abE9$condLabel)
abE9$condLabel <- plyr::revalue(as.factor(abE9$condLabel), c("xA1"="gene.actionable", "xB1"="gene.all", "xAB1s"="gene.ABS", "xAB1l"="gene.ABL", "xA2"="AV.lever", "xB2"="AV.auto", "xAB2s"="AV.ABS",  "xAB2l"="AV.ABL"))
#Create dichotomized responses
abE9 <- abE9 %>%
mutate(dv_binary = ifelse(dv < 3, 1, 0))
#Create scenario column
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) | (xAB1l > 0) | (xAB1s > 0)), "genetics", "AV"))
#Rearrange columns for easier viewing and coding.
abE9 <- abE9%>%select(pid, scenario, cond, condLabel, dv, dv_binary, FreeResponse, everything())
#Save text file
write.csv(abE9, "abE9.csv", row.names=FALSE)
rm(list = ls())
setwd("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE12")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE12 <- read.csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE12/abE12.csv")
#Do not use: abE12[is.na(abE12)] <- 0
ggplot(abE12) +
geom_bar(mapping = aes(x = dv, y = (..prop..)*100), fill = 'green', color = 'grey', width = .75) +
facet_wrap(~ condLabel, ncol = 4) +
scale_y_continuous(limits=c(0, 100), expand = c(0,0), breaks = seq(0, 100, 20), minor_breaks = seq(0, 100, 10)) +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(), panel.background = element_blank()) +
ylab('% participants providing each rating') +
xlab('Appropriateness (1. Very Inappropriate <---> 5. Very Appropriate)')
abE12summary <- summarySE(abE12, measurevar="dv", groupvars="condLabel")
ggplot(abE12summary, aes(x=condLabel, y=dv)) +
geom_bar(stat="identity", fill = 'light blue', color = 'black', width = .5) +
geom_errorbar(aes(ymin=dv-ci, ymax=dv+ci), width = .2) +
ylab('Mean Rated Appropriateness') +
xlab('Condition') +
theme(axis.text.x = element_text(angle = 320, hjust = 0))
View(abE9)
View(abE12)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE12"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
library(tidyverse)
abE12 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE12/abE12_raw.csv")
#Delete rows 2 and 3
abE12 <- abE12[-(1:2),]
#Preserve only desired columns and rename columns
abE12 <- select(abE12, oid = ResponseId, xA1,	xB1,	xAB1,	xA2,	xB2,	xAB2,	xA3,	xB3,	xAB3,
xA4,	xB4,	xAB4,	xA5,	xB5,	xAB5,	xA6,	xB6,	xAB6, xA7,	xB7,	xAB7, FreeResponse)
#Create participant IDs
abE12$pid <- 1:nrow(abE12)
#Create column "dv" with all ratings
abE12[is.na(abE12)] <- 0
abE12 <- mutate(abE12, dv = as.numeric(xA1) +	as.numeric(xB1) + as.numeric(xAB1) + as.numeric(xA2) + as.numeric(xB2) + as.numeric(xAB2) +
as.numeric(xA3) +	as.numeric(xB3) + as.numeric(xAB3) + as.numeric(xA4) + as.numeric(xB4) + as.numeric(xAB4) +
as.numeric(xA5) + as.numeric(xB5) + as.numeric(xAB5) + as.numeric(xA6) + as.numeric(xB6) + as.numeric(xAB6) +
as.numeric(xA7) + as.numeric(xB7) + as.numeric(xAB7))
#Create column "cond" with generic condition
abE12[,"cond"] <- 0
abE12$cond[abE12$xA1 > 0] <- "xA1"
abE12$cond[abE12$xB1 > 0] <- "xB1"
abE12$cond[abE12$xAB1 > 0] <- "xAB1"
abE12$cond[abE12$xA2 > 0] <- "xA2"
abE12$cond[abE12$xB2 > 0] <- "xB2"
abE12$cond[abE12$xAB2 > 0] <- "xAB2"
abE12$cond[abE12$xA3 > 0] <- "xA3"
abE12$cond[abE12$xB3 > 0] <- "xB3"
abE12$cond[abE12$xAB3 > 0] <- "xAB3"
abE12$cond[abE12$xA4 > 0] <- "xA4"
abE12$cond[abE12$xB4 > 0] <- "xB4"
abE12$cond[abE12$xAB4 > 0] <- "xAB4"
abE12$cond[abE12$xA5 > 0] <- "xA5"
abE12$cond[abE12$xB5 > 0] <- "xB5"
abE12$cond[abE12$xAB5 > 0] <- "xAB5"
abE12$cond[abE12$xA6 > 0] <- "xA6"
abE12$cond[abE12$xB6 > 0] <- "xB6"
abE12$cond[abE12$xAB6 > 0] <- "xAB6"
abE12$cond[abE12$xA7 > 0] <- "xA7"
abE12$cond[abE12$xB7 > 0] <- "xB7"
abE12$cond[abE12$xAB7 > 0] <- "xAB7"
#Create column "condLabel"
abE12 <- mutate(abE12, condLabel = cond)
cond <- as.factor(abE12$condLabel)
abE12$condLabel <- plyr::revalue(as.factor(abE12$condLabel), c("xA1"="Drug.A", "xB1"="Drug.B", "xAB1"="Drug.AB", "xA2"="DrugTeach.A", "xB2"="DrugTeach.B", "xAB2"="DrugTeach.AB",
"xA3"="Funds.More", "xB3"="Funds.Highlight", "xAB3"="Funds.MH", "xA4"="Teacher.Bonus", "xB4"="Teacher.Breaks", "xAB4"="Teacher.BoBr",
"xA5"="Charity.Roof", "xB5"="Charity.Train", "xAB5"="Charity.RT", "xA6"="Recruit.Social", "xB6"="Recruit.Career", "xAB6"="Recruit.SC",
"xA7"="Income.All", "xB7"="Income.Unemployed", "xAB7"="Income.AU"))
View(abE12)
# Find and replace all instances of based on number of experiment n and condition names:
#1. "abE12"
#2. "aCondition"
#3. "bCondition"
#4. "abConditionS"
#5. "abConditionL"
#NOTE: "xA"="aCondition", "xB"="bCondition", "xAB"="abCondition"
#Clear environment, load packages, import data
rm(list = ls())
library(tidyverse)
abE12 <- read_csv("/Users/gsholtzman/Google Drive/Geisinger 2017/AB illusion/abE12/abE12_raw.csv")
#Delete rows 2 and 3
abE12 <- abE12[-(1:2),]
#Create participant IDs
abE12$pid <- 1:nrow(abE12)
#Create column "dv" with all ratings
abE12[is.na(abE12)] <- 0
abE12 <- mutate(abE12, dv = as.numeric(xA1) +	as.numeric(xB1) + as.numeric(xAB1) + as.numeric(xA2) + as.numeric(xB2) + as.numeric(xAB2) +
as.numeric(xA3) +	as.numeric(xB3) + as.numeric(xAB3) + as.numeric(xA4) + as.numeric(xB4) + as.numeric(xAB4) +
as.numeric(xA5) + as.numeric(xB5) + as.numeric(xAB5) + as.numeric(xA6) + as.numeric(xB6) + as.numeric(xAB6) +
as.numeric(xA7) + as.numeric(xB7) + as.numeric(xAB7))
#Create column "cond" with generic condition
abE12[,"cond"] <- 0
abE12$cond[abE12$xA1 > 0] <- "xA1"
abE12$cond[abE12$xB1 > 0] <- "xB1"
abE12$cond[abE12$xAB1 > 0] <- "xAB1"
abE12$cond[abE12$xA2 > 0] <- "xA2"
abE12$cond[abE12$xB2 > 0] <- "xB2"
abE12$cond[abE12$xAB2 > 0] <- "xAB2"
abE12$cond[abE12$xA3 > 0] <- "xA3"
abE12$cond[abE12$xB3 > 0] <- "xB3"
abE12$cond[abE12$xAB3 > 0] <- "xAB3"
abE12$cond[abE12$xA4 > 0] <- "xA4"
abE12$cond[abE12$xB4 > 0] <- "xB4"
abE12$cond[abE12$xAB4 > 0] <- "xAB4"
abE12$cond[abE12$xA5 > 0] <- "xA5"
abE12$cond[abE12$xB5 > 0] <- "xB5"
abE12$cond[abE12$xAB5 > 0] <- "xAB5"
abE12$cond[abE12$xA6 > 0] <- "xA6"
abE12$cond[abE12$xB6 > 0] <- "xB6"
abE12$cond[abE12$xAB6 > 0] <- "xAB6"
abE12$cond[abE12$xA7 > 0] <- "xA7"
abE12$cond[abE12$xB7 > 0] <- "xB7"
abE12$cond[abE12$xAB7 > 0] <- "xAB7"
#Create column "condLabel"
abE12 <- mutate(abE12, condLabel = cond)
cond <- as.factor(abE12$condLabel)
abE12$condLabel <- plyr::revalue(as.factor(abE12$condLabel), c("xA1"="Drug.A", "xB1"="Drug.B", "xAB1"="Drug.AB", "xA2"="DrugTeach.A", "xB2"="DrugTeach.B", "xAB2"="DrugTeach.AB",
"xA3"="Funds.More", "xB3"="Funds.Highlight", "xAB3"="Funds.MH", "xA4"="Teacher.Bonus", "xB4"="Teacher.Breaks", "xAB4"="Teacher.BoBr",
"xA5"="Charity.Roof", "xB5"="Charity.Train", "xAB5"="Charity.RT", "xA6"="Recruit.Social", "xB6"="Recruit.Career", "xAB6"="Recruit.SC",
"xA7"="Income.All", "xB7"="Income.Unemployed", "xAB7"="Income.AU"))
#Rearrange columns for easier viewing and coding.
abE12 <- abE12%>%select(pid, cond, condLabel, dv, FreeResponse, everything())
View(abE12)
t.tests(abE12$dv ~ abE12$gender)
t.test(abE12$dv ~ abE12$gender)
t.test(abE12$dv ~ abE12$Gender)
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) |(xAB1l > 0) | (xAB1s > 0)), "genetics", 0))
View(abE12)
rm(list = ls())
setwd("/Users/gsholtzman/Dropbox/ABI Archive/abE9")
#Load packages
library(tidyverse) #for ggplot and filter
library(readxl) #for read
library(effsize) #for cohens d
library(gridExtra) #for multi plots
library(psy) #for alpha
library(scales) #for colors
library(Rmisc) #for summary stats
library(knitr)
library(kableExtra)
library(broom)
abE9 <- read.csv("/Users/gsholtzman/Dropbox/ABI Archive/abE9/abE9.csv")
abE9[is.na(abE9)] <- 0
###THIS WILL HAVE TO BE MOVED TO THE CLEANING R
#Create scenario column
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) | (xAB1l > 0) | (xAB1s > 0)), "genetics", 0))
View(abE9)
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA2 > 0) | (xB2 > 0) | (xAB2l > 0) | (xAB2s > 0)), "genetics"))
View(abE9)
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA2 > 0) | (xB2 > 0) | (xAB2l > 0) | (xAB2s > 0)), "genetics", ))
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA2 > 0) | (xB2 > 0) | (xAB2l > 0) | (xAB2s > 0)), "genetics", abE9$scenario))
View(abE9)
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) | (xAB1l > 0) | (xAB1s > 0)), "genetics", 0))
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA2 > 0) | (xB2 > 0) | (xAB2l > 0) | (xAB2s > 0)), "AV", abE9$scenario))
View(abE9)
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA1 > 0) | (xB1 > 0) |
(xAB1l > 0) | (xAB1s > 0)), "genetics", 0))
abE9 <- abE9 %>%
mutate(scenario = ifelse(((xA2 > 0) | (xB2 > 0) |
(xAB2l > 0) | (xAB2s > 0)), "AV", abE9$scenario))
View(abE9)
